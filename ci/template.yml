Description: 'Toolchain template which provides the resources needed to represent
  infrastructure as code. This template specifically creates a CI/CD pipeline to build
  a model using a SageMaker Pipeline and deploy the resulting trained ML Model from
  Model Registry to two stages in CD -- staging and production.'
Parameters:
  SageMakerProjectName:
    Type: String
    Description: 'Name of the project'
    MinLength: 1
    MaxLength: 32
    AllowedPattern: '^[a-zA-Z](-*[a-zA-Z0-9])*'
  SageMakerProjectId:
    Type: String
    Description: Service generated Id of the project.
    Default: 'SageMakerProjectMLOps'
  ProductId:
    Type: String
    Description: 'Service Catalog Product Id of the project.'
  RepositoryUrl:
    Type: String
    Default: 'https://github.com/baldcodr/e2e-mlops-infra-aws.git'
  GitRepo:
    Type: String
    Description: 'Repo branch to use for the pipeline'
    Default: 'baldcodr/e2e-mlops-infra-aws'
  GitHubConnectionArn:
    Type: String
    Description: 'ARN of the GitHub Connection'
  Branch:
    Type: String
    Description: 'Repo branch to use for the pipeline'
    Default: 'main'

Resources:
  MlOpsArtifactsBucket:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: 'Delete'
    UpdateReplacePolicy: 'Delete'
    Properties:
      BucketName:
        Fn::Sub: 'sagemaker-project-${SageMakerProjectName}'
  SageMakerProject:
    Type: AWS::SageMaker::Project
    Properties:
      ProjectName: !Ref SageMakerProjectName
      ServiceCatalogProvisioningDetails:
        ProductId: !Ref ProductId
  SageMakerModelPipelineBuildProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name:
        Fn::Sub: 'sagemaker-${SageMakerProjectName}-modelbuild'
      Description: 'Builds the model building workflow code repository, creates
        the SageMaker Pipeline and executes it'
      ServiceRole:
        Fn::Join:
        - ':'
        - - 'arn'
          - Ref: 'AWS::Partition'
          - 'iam:'
          - Ref: 'AWS::AccountId'
          - 'role/service-role/AmazonSageMakerServiceCatalogProductsUseRole'
      Artifacts:
        Type: 'CODEPIPELINE'
      Environment:
        Type: 'LINUX_CONTAINER'
        ComputeType: 'BUILD_GENERAL1_SMALL'
        Image: 'aws/codebuild/amazonlinux2-x86_64-standard:5.0'
        EnvironmentVariables:
        - Name: 'SAGEMAKER_PROJECT_NAME'
          Value:
            Ref: 'SageMakerProjectName'
        - Name: 'SAGEMAKER_PROJECT_ID'
          Value: 
            Fn::GetAtt: [ SageMakerProject,ProjectId ]
        - Name: 'ARTIFACT_BUCKET'
          Value:
            Ref: 'MlOpsArtifactsBucket'
        - Name: 'SAGEMAKER_PIPELINE_NAME'
          Value:
            Fn::Sub: 'sagemaker-${SageMakerProjectName}'
        - Name: 'SAGEMAKER_PIPELINE_ROLE_ARN'
          Value:
            Fn::Join:
            - ':'
            - - 'arn'
              - Ref: 'AWS::Partition'
              - 'iam:'
              - Ref: 'AWS::AccountId'
              - 'role/service-role/AmazonSageMakerServiceCatalogProductsUseRole'
        - Name: 'AWS_REGION'
          Value:
            Ref: 'AWS::Region'
      Source:
        Type: 'CODEPIPELINE'
        BuildSpec: 'codebuild-buildspec.yml'
      TimeoutInMinutes: 480
  ModelBuildPipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      Name:
        Fn::Sub: 'sagemaker-${SageMakerProjectName}-modelbuild'
      RoleArn:
        Fn::Join:
        - ':'
        - - 'arn'
          - Ref: 'AWS::Partition'
          - 'iam:'
          - Ref: 'AWS::AccountId'
          - 'role/service-role/AmazonSageMakerServiceCatalogProductsUseRole'
      ArtifactStore:
        Type: 'S3'
        Location:
          Ref: 'MlOpsArtifactsBucket'
      Stages:
        - Name: Source
          Actions:
          - Name: GitHubSource
            RunOrder: 1
            ActionTypeId:
              Category: Source
              Owner: AWS
              Version: "1"
              Provider: CodeStarSourceConnection
            OutputArtifacts:
              - Name: ModelBuildSourceArtifact
            Configuration:
              ConnectionArn: !Ref GitHubConnectionArn
              DetectChanges: true
              FullRepositoryId: !Ref GitRepo
              BranchName: !Ref Branch
              OutputArtifactFormat: "CODE_ZIP"
        - Name: 'Build'
          Actions:
          - Name: 'BuildAndExecuteSageMakerPipeline'
            ActionTypeId:
              Category: 'Build'
              Owner: 'AWS'
              Provider: 'CodeBuild'
              Version: 1
            InputArtifacts:
              - Name: 'ModelBuildSourceArtifact'
            OutputArtifacts:
              - Name: 'ModelBuildBuildArtifact'
            Configuration:
              ProjectName:
                Ref: 'SageMakerModelPipelineBuildProject'
            RunOrder: 2
  ModelDeploySageMakerEventRule:
    Type: 'AWS::Events::Rule'
    Properties:
      Name:
        Fn::Sub: 'sagemaker-${SageMakerProjectName}-model'
      Description: 'Rule to trigger a deployment when SageMaker Model registry is
        updated with a new model package. For example, a new model package is registered
        with Registry'
      EventPattern:
        source:
        - 'aws.sagemaker'
        detail-type:
        - 'SageMaker Model Package State Change'
        detail:
          ModelPackageGroupName:
          - Fn::Sub: 'model-pg-name-${SageMakerProjectName}'
          ModelApprovalStatus:
          - 'anything-but':
            - 'PendingManualApproval'
      State: 'ENABLED'
      Targets:
      - Arn:
          Fn::Join:
          - ':'
          - - 'arn'
            - Ref: 'AWS::Partition'
            - 'codepipeline'
            - Ref: 'AWS::Region'
            - Ref: 'AWS::AccountId'
            - Ref: 'ModelDeployPipeline'
        RoleArn:
          Fn::Join:
          - ':'
          - - 'arn'
            - Ref: 'AWS::Partition'
            - 'iam:'
            - Ref: 'AWS::AccountId'
            - 'role/service-role/AmazonSageMakerServiceCatalogProductsUseRole'
        Id:
          Fn::Sub: 'sagemaker-${SageMakerProjectName}-trigger'
  ModelDeployBuildProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name:
        Fn::Sub: 'sagemaker-${SageMakerProjectName}-modeldeploy'
      Description: 'Builds the Cfn template which defines the Endpoint with specified
        configuration'
      ServiceRole:
        Fn::Join:
        - ':'
        - - 'arn'
          - Ref: 'AWS::Partition'
          - 'iam:'
          - Ref: 'AWS::AccountId'
          - 'role/service-role/AmazonSageMakerServiceCatalogProductsUseRole'
      Artifacts:
        Type: 'CODEPIPELINE'
      Environment:
        Type: 'LINUX_CONTAINER'
        ComputeType: 'BUILD_GENERAL1_SMALL'
        Image: 'aws/codebuild/amazonlinux2-x86_64-standard:5.0'
        EnvironmentVariables:
        - Name: 'SAGEMAKER_PROJECT_NAME'
          Value:
            Ref: 'SageMakerProjectName'
        - Name: 'SAGEMAKER_PROJECT_ID'
          Value: 
            Fn::GetAtt: [ SageMakerProject,ProjectId ]
        - Name: 'ARTIFACT_BUCKET'
          Value:
            Ref: 'MlOpsArtifactsBucket'
        - Name: 'MODEL_EXECUTION_ROLE_ARN'
          Value:
            Fn::Join:
            - ':'
            - - 'arn'
              - Ref: 'AWS::Partition'
              - 'iam:'
              - Ref: 'AWS::AccountId'
              - 'role/service-role/AmazonSageMakerServiceCatalogProductsUseRole'
        - Name: 'SOURCE_MODEL_PACKAGE_GROUP_NAME'
          Value:
            Fn::Sub: '${SageMakerProjectName}'
        - Name: 'AWS_REGION'
          Value:
            Ref: 'AWS::Region'
        - Name: 'EXPORT_TEMPLATE_NAME'
          Value: 'template-export.yml'
        - Name: 'EXPORT_TEMPLATE_STAGING_CONFIG'
          Value: 'staging-config-export.json'
        - Name: 'EXPORT_TEMPLATE_PROD_CONFIG'
          Value: 'prod-config-export.json'
      Source:
        Type: 'CODEPIPELINE'
        BuildSpec: 'buildspec.yml'
      TimeoutInMinutes: 30
  ModelDeployTestProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name:
        Fn::Sub: 'sagemaker-${SageMakerProjectName}-testing'
      Description: 'Test the deployment endpoint'
      ServiceRole:
        Fn::Join:
        - ':'
        - - 'arn'
          - Ref: 'AWS::Partition'
          - 'iam:'
          - Ref: 'AWS::AccountId'
          - 'role/service-role/AmazonSageMakerServiceCatalogProductsUseRole'
      Artifacts:
        Type: 'CODEPIPELINE'
      Environment:
        Type: 'LINUX_CONTAINER'
        ComputeType: 'BUILD_GENERAL1_SMALL'
        Image: 'aws/codebuild/amazonlinux2-x86_64-standard:5.0'
        EnvironmentVariables:
        - Name: 'SAGEMAKER_PROJECT_NAME'
          Value:
            Ref: 'SageMakerProjectName'
        - Name: 'SAGEMAKER_PROJECT_ID'
          Value: 
            Fn::GetAtt: [ SageMakerProject,ProjectId ]
        - Name: 'AWS_REGION'
          Value:
            Ref: 'AWS::Region'
        - Name: 'BUILD_CONFIG'
          Value: 'staging-config-export.json'
        - Name: 'EXPORT_TEST_RESULTS'
          Value: 'test-results.json'
      Source:
        Type: 'CODEPIPELINE'
        BuildSpec: 'test/buildspec.yml'
      TimeoutInMinutes: 30
  ModelDeployPipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      Name:
        Fn::Sub: 'sagemaker-${SageMakerProjectName}-modeldeploy'
      RoleArn:
        Fn::Join:
        - ':'
        - - 'arn'
          - Ref: 'AWS::Partition'
          - 'iam:'
          - Ref: 'AWS::AccountId'
          - 'role/service-role/AmazonSageMakerServiceCatalogProductsUseRole'
      ArtifactStore:
        Type: 'S3'
        Location:
          Ref: 'MlOpsArtifactsBucket'
      Stages:
      - Name: Source
        Actions:
        - Name: GitHubSource
          RunOrder: 1
          ActionTypeId:
            Category: Source
            Owner: AWS
            Version: "1"
            Provider: CodeStarSourceConnection
          OutputArtifacts:
            - Name: SourceArtifact
          Configuration:
            ConnectionArn: !Ref GitHubConnectionArn
            DetectChanges: false
            FullRepositoryId: !Ref GitRepo
            BranchName: !Ref Branch
            OutputArtifactFormat: "CODE_ZIP"
      - Name: 'Build'
        Actions:
        - Name: 'BuildDeploymentTemplates'
          ActionTypeId:
            Category: 'Build'
            Owner: 'AWS'
            Provider: 'CodeBuild'
            Version: 1
          InputArtifacts:
            - Name: 'SourceArtifact'
          OutputArtifacts:
            - Name: 'BuildArtifact'
          Configuration:
            ProjectName:
              Ref: 'ModelDeployBuildProject'
          RunOrder: 2
      - Name: 'DeployStaging'
        Actions:
        - Name: 'DeployResourcesStaging'
          InputArtifacts:
          - Name: 'BuildArtifact'
          ActionTypeId:
            Category: 'Deploy'
            Owner: 'AWS'
            Version: 1
            Provider: 'CloudFormation'
          Configuration:
            ActionMode: 'REPLACE_ON_FAILURE'
            Capabilities: 'CAPABILITY_NAMED_IAM'
            RoleArn:
              Fn::Join:
              - ':'
              - - 'arn'
                - Ref: 'AWS::Partition'
                - 'iam:'
                - Ref: 'AWS::AccountId'
                - 'role/service-role/AmazonSageMakerServiceCatalogProductsUseRole'
            StackName:
              Fn::Sub: 'sagemaker-${SageMakerProjectName}-deploy-staging'
            TemplateConfiguration: 'BuildArtifact::staging-config-export.json'
            TemplatePath: 'BuildArtifact::template-export.yml'
          RunOrder: 1
        - Name: 'TestStaging'
          ActionTypeId:
            Category: 'Build'
            Owner: 'AWS'
            Provider: 'CodeBuild'
            Version: 1
          InputArtifacts:
          - Name: 'SourceArtifact'
          - Name: 'BuildArtifact'
          OutputArtifacts:
          - Name: 'TestArtifact'
          Configuration:
            ProjectName:
              Ref: 'ModelDeployTestProject'
            PrimarySource: 'SourceArtifact'
          RunOrder: 2
        - Name: 'ApproveDeployment'
          ActionTypeId:
            Category: 'Approval'
            Owner: 'AWS'
            Version: 1
            Provider: 'Manual'
          Configuration:
            CustomData: 'Approve this model for Production'
          RunOrder: 3
      - Name: 'DeployProd'
        Actions:
        - Name: 'DeployResourcesProd'
          InputArtifacts:
          - Name: 'BuildArtifact'
          ActionTypeId:
            Category: 'Deploy'
            Owner: 'AWS'
            Version: 1
            Provider: 'CloudFormation'
          Configuration:
            ActionMode: 'CREATE_UPDATE'
            RoleArn:
              Fn::Join:
              - ':'
              - - 'arn'
                - Ref: 'AWS::Partition'
                - 'iam:'
                - Ref: 'AWS::AccountId'
                - 'role/service-role/AmazonSageMakerServiceCatalogProductsUseRole'
            Capabilities: 'CAPABILITY_NAMED_IAM'
            StackName:
              Fn::Sub: 'sagemaker-${SageMakerProjectName}-deploy-prod'
            TemplateConfiguration: 'BuildArtifact::prod-config-export.json'
            TemplatePath: 'BuildArtifact::template-export.yml'
          RunOrder: 1
  ModelBuildSagemakerCodeRepository:
    Type: AWS::SageMaker::CodeRepository
    Properties:
      CodeRepositoryName: !Sub ${SageMakerProjectName}-modelbuild-repo
      GitConfig:
        Branch: !Ref Branch
        RepositoryUrl: !Ref RepositoryUrl